plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.ysb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//aws-serverless-java-container
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot2:[1.4,)'

	//postgresql jdbc
	implementation 'org.postgresql:postgresql:42.5.1'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation 'org.projectlombok:lombok:1.18.26'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	//oauth2
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.6.3'

	//Redis
//	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
//	implementation 'org.springframework.session:spring-session-data-redis'

	//spring-data-dynamodb
//	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'

	//aws java sdk
	implementation platform('software.amazon.awssdk:bom:2.20.56')
	implementation("software.amazon.awssdk:dynamodb-enhanced")
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:sns:2.17.290'

	//json
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//tomcat 포함하지 않은 빌드 task
task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from(configurations.compileClasspath) {
			exclude 'tomcat-embed-*'
		}
	}
}

build {
	dependsOn buildZip
}
